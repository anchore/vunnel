[tool.poetry.scripts]
vunnel = "vunnel.cli:run"

[tool.poetry]
name = "vunnel"
version = "0.0.0" # note: this is automagically managed -- no need to manually change this
description = "vunnel ~= 'vulnerability data funnel'"
authors = ["Alex Goodman <alex.goodman@anchore.com>"]
license = "Apache 2.0"
readme = "README.md"
exclude = [
    "tests/**/*"
]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
click = "^8.1.3"
requests = "^2.28.1"
colorlog = "^6.7.0"
rfc3339 = "^6.2"
PyYAML = "^6.0"
ijson = "^3.1.4"
xxhash = "^3.1.0"
cvss = "^2.6"
python-dateutil = "^2.8.2"
defusedxml = "^0.7.1"
dataclass-wizard = "^0.22.2"
orjson = "^3.8.3"
SQLAlchemy = "^1.4.46"
mergedeep = "^1.3.4"
future = "^0.18.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
tox = "^4.0.9"
pre-commit = "^2.20.0"
black = "^22.10.0"
isort = "^5.10.1"
jsonschema = "^4.17.3"
pytest-unordered = "^0.5.2"
pytest-sugar = "^0.9.6"
pytest-clarity = "^1.0.1"
pytest-cov = "^4.0.0"
pytest-picked = "^0.4.6"
flake8 = "^6.0.0"
Flake8-pyproject = "^1.2.2"
bandit = "^1.7.4"
mypy = "^0.991"
types-PyYAML = "^6.0.12.4"
flake8-bugbear = "^22.12.6"
radon = "^5.1.0"
flake8-simplify = "^0.19.3"
autoflake = "^2.0.1"
pytest-mock = "^3.10.0"
pytest-xdist = "^3.1.0"
unimport = "^0.12.3"
types-requests = "^2.28.11.7"
dunamai = "^1.15.0"

[build-system]
requires = ["poetry-core>=1.3.0", "poetry-dynamic-versioning"]
# note: this is a thin wrapper around "poetry.core.masonry.api"
build-backend = "poetry_dynamic_versioning.backend"


[tool.isort]
# all settings suggested by black: https://black.readthedocs.io/en/stable/compatible_configs.html
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100
skip_gitignore = true

[tool.pylint.messages_control]
disable = [
        # pylint wants deferred formatting for log messages (to use less CPU if that log level is disabled). We prefer the legibility of f-strings: f"a is {a}"
        "logging-format-interpolation",
        "logging-fstring-interpolation",
        "logging-not-lazy",

        # haven't gotten around to doc strings yet
        "missing-function-docstring",
        "missing-module-docstring",
        "missing-class-docstring",

        # this is a bit strict for a few cases
        "invalid-name",
        "duplicate-code",

        # having TODO's and FIXME's are OK in a codebase
        "fixme",

        # dataclasses shouldn't be restricted on the number of instance attributes
        "R0902",

        # this seems to make wrong guesses
        "unnecessary-lambda",

        # "too few public methods" does not take into account UI element bindings in an event update driven fashion
        "R0903",
    ]

[tool.pylint.format]
# allow for a wide-birth
max-line-length = "150"

[tool.mypy]
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = '''(?x)(
    ^src/vunnel/providers/alpine/parser\.py$      # ported from enterprise, never had type hints
    | ^src/vunnel/providers/amazon/parser\.py$    # ported from enterprise, never had type hints
    | ^src/vunnel/providers/centos/parser\.py$    # ported from enterprise, never had type hints
    | ^src/vunnel/providers/debian/parser\.py$    # ported from enterprise, never had type hints
    | ^src/vunnel/providers/github/parser\.py$    # ported from enterprise, never had type hints
    | ^src/vunnel/providers/nvd/parser\.py$       # ported from enterprise, never had type hints
    | ^src/vunnel/providers/oracle/parser\.py$    # ported from enterprise, never had type hints
    | ^src/vunnel/providers/rhel/parser\.py$      # ported from enterprise, never had type hints
    | ^src/vunnel/providers/sles/parser\.py$      # ported from enterprise, never had type hints
    | ^src/vunnel/providers/ubuntu/git\.py$       # ported from enterprise, never had type hints
    | ^src/vunnel/providers/ubuntu/parser\.py$    # ported from enterprise, never had type hints
    | ^src/vunnel/providers/wolfi/parser\.py$     # ported from enterprise, never had type hints
    | ^src/vunnel/utils/oval_v2.py$               # ported from enterprise, never had type hints
    | ^src/vunnel/utils/oval_parser.py$           # ported from enterprise, never had type hints
    | ^src/vunnel/utils/fdb.py$                   # ported from enterprise, never had type hints
    | ^src/vunnel/utils/vulnerability.py$         # ported from enterprise, never had type hints
    | ^tests/.*$     # any tests
)'''

[tool.black]
line-length = 130
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | data
    | backup
  )/
)
'''

[tool.coverage.run]
omit = [
  ".*",
  "*/site-packages/*",
  "*/venv/*",
  "tests/*",
  "src/vunnel/__main__.py",
  "src/vunnel/cli/__init__.py",
]

[tool.coverage.report]
fail_under = 80

[tool.flake8]
# note: this mirrors the black configuration in pre-commit config
max-line-length = 130

[tool.bandit]
exclude_dirs = ["tests",]

[tool.autoflake]
# note: these options may not play nicely with __init__ imports
remove-unused-variables = true

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
metadata = true
style = "semver"
dirty = true
