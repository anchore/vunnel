name: "Bootstrap"
description: "Bootstrap all tools and dependencies"
inputs:
  go-version:
    description: "Go version to install"
    required: true
    default: "1.24.x"
  python-version:
    description: "Python version to install"
    required: true
    # note: the caller really drives this in a matrix strategy run for unit tests.
    # this default value is used for the rest of the workflow.
    default: "3.11"
  uv-version:
    description: "UV version to install"
    required: true
    default: "0.5.16"
  go:
    description: "Install go"
    required: true
    default: "false"
  tools:
    description: "Bootstrap tooling"
    required: true
    default: "true"
  cache-key-prefix:
    description: "Prefix all cache keys with this value"
    required: true
    default: "9c833ef7"
  bootstrap-apt-packages:
    description: "Space delimited list of tools to install via apt"
    default: ""

runs:
  using: "composite"
  steps:

    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 #v6.0.0
      with:
        go-version: ${{ inputs.go-version }}

    - uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v6.7.0
      with:
        enable-cache: true

    - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version: ${{ inputs.python-version }}

    - name: Restore tool cache
      id: tool-cache
      if: inputs.tools == 'true'
      uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      with:
        path: ${{ github.workspace }}/.tmp
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('Makefile') }}

    - name: (cache-miss) Bootstrap tools
      if: steps.tool-cache.outputs.cache-hit != 'true' && inputs.tools == 'true'
      shell: bash
      run: make bootstrap

    - name: Install apt packages
      if: inputs.bootstrap-apt-packages != ''
      shell: bash
      env:
        APT_PACKAGES: ${{ inputs.bootstrap-apt-packages }}
      run: |
        # Convert space-separated string to bash array for safe handling
        read -ra packages <<< "$APT_PACKAGES"
        if [ ${#packages[@]} -gt 0 ]; then
          DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y "${packages[@]}"
        fi

    - name: Install project + dependencies
      shell: bash
      run: uv sync --all-extras --dev

    - name: Restore tox cache
      id: cache-tox
      uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      with:
        path: .tox
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('tox.ini') }}
